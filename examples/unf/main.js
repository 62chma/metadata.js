/**
 * Основное окно интерфейса unf demo
 * <br />&copy; http://www.oknosoft.ru 2009-2015
 * Created 17.06.2015
 * @module  main
 */

/**
 * Глобальная переменная демки УНФ (не фреймворка _metadata.js_, а конкретного прикладного решения)<br />
 * в её свойстве _modifiers_ располагаем модификаторы объектов, подписки на события и прочую бизнес-логику,
 * которая должна обрабатываться на клиенте
 * @type {UNF}
 */
var unf = new function UNF() {
	this.modifiers = []
};

/**
 * Процедура устанавливает параметры работы программы, специфичные для текущей сборки
 * @param prm {Object} - в свойствах этого объекта определяем параметры работы программы
 * @param modifiers {Array} - сюда можно добавить обработчики, переопределяющие функциональность объектов данных
 */
$p.settings = function (prm, modifiers) {

	/**
	 * установленность приложения в ChromeStore НЕ проверяем
 	 */
	prm.check_app_installed = false;

	/**
	 * для транспорта используем rest, а не сервис http
	 */
	prm.rest = true;

	/**
	 * автономная работа запрещена
	 */
	prm.offline = false;
	if(localStorage)
		localStorage.setItem("offline", "");

	/**
	 * будем использовать объекты данных, для которых создаём таблицы
	 */
	prm.create_tables = "/examples/unf/data/create_tables.sql";

	$p.ajax.get("/examples/unf/data/create_tables.sql")
		.then(function (req) {
			prm.create_tables_sql = req.response;   // текст запроса
		});

	/**
	 * расположение страницы настроек
	 */
	prm.settings_url = "/examples/unf/settings.html";

	/**
	 * расположение rest-сервиса unf
	 */
	prm.rest_path = "/a/unf/%1/odata/standard.odata/";

	/**
	 * расположение файлов данных
	 */
	prm.data_url = "/examples/unf/data/";

	/**
	 * подключаем модификаторы
	 */
	unf.modifiers.forEach(function (func) {
		modifiers.push(func);
	});

};


/**
 * Обработчик события при начале работы программы
 */
$p.iface.oninit = function() {

	/**
	 * Используем разбивку экрана в две колонки: дерево навигации слева, динсписок в центре
	 */
	$p.iface.layout_2u()

		.then(function (tree) {

			/**
			 * Используем стандартную процедуру аутентификации.
			 * При необходимости, можно реализовать клиентские сертификаты, двухфакторную авторизацию с одноразовыми sms и т.д.
			 */
			$p.iface.frm_auth(

				/**
				 * Используем стандартную визуализацию входа в программу.
				 * При необходимости, можно показкать свои диалоги, оповещения, рекламу и т.д.
				 */
				null,

				/**
				 *  открываем окно "все функции" с деревом метаданных
				 *  это место можно переопределить и открывать, например, специальную форму списка заказов
				 */
				function () {
					$p.iface.set_hash("doc.buyers_order", "", "", "oper");

				},

				/**
				 * в случае ошибки входа в программу, просто пишем информацию в лог
				 * здесь можно реализовать некий алгоритм recovery - подключиться к резервному серверу, перейти в автономный режим и т.д.
				 */
				function (err) {
					console.log(err.message);
				}
			);
		}

	);

};


