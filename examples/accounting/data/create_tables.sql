USE md;
CREATE TABLE IF NOT EXISTS refs (ref CHAR);
CREATE TABLE IF NOT EXISTS `cacc_Хозрасчетный` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ЗапретитьИспользоватьВПроводках` BOOLEAN, `КодБыстрогоВыбора` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cch_properties` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Заголовок` CHAR, `Виден` BOOLEAN, `НаборСвойств` CHAR, `ЭтоДополнительноеСведение` BOOLEAN, `Доступен` BOOLEAN, `ЗаполнятьОбязательно` BOOLEAN, `МногострочноеПолеВвода` INT, `ДополнительныеЗначенияИспользуются` BOOLEAN, `ВладелецДополнительныхЗначений` CHAR, `ДополнительныеЗначенияСВесом` BOOLEAN, `ЗаголовокФормыЗначения` CHAR, `ЗаголовокФормыВыбораЗначения` CHAR, `ФорматСвойства` CHAR, `Комментарий` CHAR, `Подсказка` CHAR, `УдалитьСклоненияПредмета` CHAR, `type` JSON, `ts_ЗависимостиДополнительныхРеквизитов` JSON);
CREATE TABLE IF NOT EXISTS `enm_ЮридическоеФизическоеЛицо` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_УдалитьЮрФизЛицо` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыЭлементовВерсииЭД` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыЭД` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыЦикловОбмена` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыХраненияФайлов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыФайловСведенийФизическихЛиц` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыФайловОтчетностиПФР` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыФайловДляВстроенногоРедактора` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыФайловБухОтчетности` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыТранспортныхСообщений` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыТекстовЭлектронныхПисем` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыСчетчиковВыгрузки` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыСодержимогоФайлов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыСодержимогоТранспортногоКонтейнера` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыСкладов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыСведенийСЗВ` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыРесурсовМеханизмаОнлайнСервисовРО` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыРегистров` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПроблемОбменаДанными` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПользователей` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПолейРегистра` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПодключаемогоОборудования` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПерепискиСКонтролирующимиОрганами` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОценочныхОбязательств` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОтчетов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОтправляемыхДокументов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОплат` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыНаправленийСдачиОтчетности` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКриптоПровайдеров` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКонтролирующихОрганов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКонтактнойИнформации` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыЗначенийКатегорийНовостей` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыЗаявленияАбонентаСпецоператораСвязи` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыЗапросовРеестровСчетовФактур` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыЗадолженности` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыДополнительныхРеквизитов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыДоговоровСЗВ63` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыДекларантовФСРАР` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыДанныхКэшаПрограммныхИнтерфейсов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыВложенийНеформализованныхДокументовНалогоплательщика` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыВладельцевЭЦП` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыВерсийОбъекта` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_СтавкиНДС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_СпособыУчетаНДС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_СпособыЗачетаАвансов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ПолФизическогоЛица` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЭД` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЦикловОбмена` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЦенностей` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыУслугПриИОС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыУслугПриИОН` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыУведомленийОСпецрежимахНалогообложения` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыТрудовогоСтажа` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыТранспортаСообщенийОбмена` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСтраховыхВзносовИП` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСтоимости` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСтажаПФР2014` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСостоянийРегламентныхОпераций` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСостоянийНМА` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСобытийОС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСЗВ_К` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыСвободныхСтрокФормСтатистики` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРегламентныхОпераций` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРБП` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРасчетовПоСредствамФСС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРасчетовПоДоговорам` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРасходовУСН` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРасходовНУ` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРазницПБУ18` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыРаботСДосрочнойПенсией` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПрочихДоходовИРасходов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПредставляемыхДокументов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПравилДляОбменаДанными` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПодтверждающихДокументовОтпускаПоУходу` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПодакцизныхТоваров` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПлатежейПоКредитамЗаймам` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПлатежейВСоциальныеФонды` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПлатежейВГосБюджет` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПеречисленийВБюджет` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыПараметровЗапросаНаВыпискуИзЕГРЮЛ_ЕГРИП` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОтчетовПоПлатежамКомиссия` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОтчетности` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОсобыхНачисленийИУдержаний` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОсобойЗоныПроживанияРаботы` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОплатыЗарплатнойКарты` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийЭД` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийСписаниеДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийРКО` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийРеализацияТоваров` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийРасчетаСебестоимости` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийРасчетаКосвенныхРасходов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПринятияКУчетуОсновныхСредств` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПоступлениеТоваровУслуг` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПоступлениеДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПоступлениеДенежныхДокументов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПоЗарплате` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПКО` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПереходаНаУСН` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийПередачаТоваров` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийОтчетОРозничныхПродажах` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийОтчетКомитентуОПродажах` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийОплатаПлатежнойКартой` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийКорректировкаДолга` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийКомплектацияНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийИсправленияПоступленияРеализации` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийВыдачаДенежныхДокументов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийВозвратТоваровПоставщику` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийВозвратТоваровОтПокупателя` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОграниченияПособия` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОбязательногоСтрахованияСотрудников` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОбъектовУчетаНМА` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОбменаСКонтролирующимиОрганами` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыНМА` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыНачисленийОплатыТрудаДляНУ` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыНачисленийНДС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыНалоговыхЛьготПоТранспортномуНалогу` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыНалоговыхДокументов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыНалогов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыНазначенияДатЗапрета` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыМПЗ` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыМестВыплатыЗарплаты` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЛицензийНаПродажуАлкоголя` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыКонтрагентовВМонитореРуководителя` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыКонтактныхЛиц` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыКадровыхСобытий` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыИмущественныхНалогов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыИмущества` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЗастрахованныхЛицОбязательногоСтрахования` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЗанятости` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЗадолженности` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДополнительныхСтатейЗатрат` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДополнительныхОтчетовИОбработок` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДоговоровКонтрагентов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДнейПроизводственногоКалендаря` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДеятельностиДляНалоговогоУчетаЗатрат` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДенежныхДокументов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДействийКалендаряБухгалтера` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДвиженийРасчетСебестоимости` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДвиженийДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыГосударственныхОрганов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыВычетовНДС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыВзаиморасчетовССотрудниками` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыАктивовИОбязательствПБУ18` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыАктивовИОбязательств` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыАктивовДляРБП` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыАДВ` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыАгентскихДоговоров` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыАвансаЗадолженности` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидСчетаФактурыПолученного` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидСчетаФактурыВыставленного` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидНалоговойЛьготыПоСуммеНалогаПоЗемельномуНалогу` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогу` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидЗаписиОРегистрации` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВариантыНаименованияДляПечатныхФорм` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `doc_СчетФактураВыданный` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `ВидСчетаФактуры` CHAR, `Организация` CHAR, `Контрагент` CHAR, `ДоговорКонтрагента` CHAR, `Исправление` BOOLEAN, `НомерИсправления` INT, `ИсправляемыйСчетФактура` CHAR, `НомерИсправляемогоКорректировочногоДокумента` CHAR, `ДатаИсправляемогоКорректировочногоДокумента` Date, `НомерИсходногоДокумента` CHAR, `ДатаИсходногоДокумента` Date, `УдалитьУчитыватьИсправлениеИсходногоДокумента` BOOLEAN, `УдалитьНомерИсправленияИсходногоДокумента` INT, `УдалитьДатаИсправленияИсходногоДокумента` Date, `Комитент` CHAR, `Продавец` CHAR, `ДокументОснование` CHAR, `ДатаПлатежноРасчетногоДокумента` Date, `НомерПлатежноРасчетногоДокумента` CHAR, `ДатаДокументаАвансаКомитента` Date, `НомерДокументаАвансаКомитента` CHAR, `СчетНаОплату` CHAR, `КодВидаОперации` CHAR, `СчетФактураНеВыставляется` BOOLEAN, `Выставлен` BOOLEAN, `ДатаВыставления` Date, `КодСпособаВыставления` INT, `СчетФактураБезНДС` BOOLEAN, `Под0` BOOLEAN, `СтавкаНДС` CHAR, `Сумма` FLOAT, `СуммаНДС` FLOAT, `СуммаДокумента` FLOAT, `СуммаУвеличение` FLOAT, `СуммаУменьшение` FLOAT, `СуммаНДСДокумента` FLOAT, `СуммаНДСУвеличение` FLOAT, `СуммаНДСУменьшение` FLOAT, `ВалютаДокумента` CHAR, `Ответственный` CHAR, `Комментарий` CHAR, `РучнаяКорректировка` BOOLEAN, `СформированПриВводеНачальныхОстатковНДС` BOOLEAN, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `КППКонтрагента` CHAR, `СводныйКорректировочный` BOOLEAN, `ПредставлениеНомера` CHAR, `НомерСчетаФактурыПродавца` CHAR, `СуммаДокументаКомиссия` FLOAT, `СуммаНДСДокументаКомиссия` FLOAT, `СуммаУвеличениеКомиссия` FLOAT, `СуммаУменьшениеКомиссия` FLOAT, `СуммаНДСУвеличениеКомиссия` FLOAT, `СуммаНДСУменьшениеКомиссия` FLOAT, `СводныйКомиссионный` BOOLEAN, `ts_ДокументыОснования` JSON, `ts_ПлатежноРасчетныеДокументы` JSON, `ts_Авансы` JSON);
CREATE TABLE IF NOT EXISTS `doc_СчетНаОплатуПокупателю` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `Склад` CHAR, `ПодразделениеОрганизации` CHAR, `Контрагент` CHAR, `ДоговорКонтрагента` CHAR, `АдресДоставки` CHAR, `ОрганизацияПолучатель` CHAR, `СтруктурнаяЕдиница` CHAR, `Ответственный` CHAR, `Комментарий` CHAR, `ВалютаДокумента` CHAR, `КратностьВзаиморасчетов` INT, `КурсВзаиморасчетов` FLOAT, `СуммаВключаетНДС` BOOLEAN, `СуммаДокумента` FLOAT, `ТипЦен` CHAR, `УдалитьУчитыватьНДС` BOOLEAN, `УдалитьСтатусОплаты` CHAR, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `ЗаРуководителяПоПриказу` CHAR, `ЗаГлавногоБухгалтераПоПриказу` CHAR, `ДокументБезНДС` BOOLEAN, `ДополнительныеУсловия` CHAR, `ts_Товары` JSON, `ts_ВозвратнаяТара` JSON, `ts_УдалитьУслуги` JSON);
CREATE TABLE IF NOT EXISTS `doc_РеализацияТоваровУслуг` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `ВидОперации` CHAR, `Организация` CHAR, `Склад` CHAR, `ПодразделениеОрганизации` CHAR, `ДеятельностьНаПатенте` BOOLEAN, `Патент` CHAR, `Контрагент` CHAR, `ДоговорКонтрагента` CHAR, `СпособЗачетаАвансов` CHAR, `ТипЦен` CHAR, `ВалютаДокумента` CHAR, `КурсВзаиморасчетов` FLOAT, `КратностьВзаиморасчетов` INT, `СуммаВключаетНДС` BOOLEAN, `УдалитьУчитыватьНДС` BOOLEAN, `СчетУчетаРасчетовСКонтрагентом` CHAR, `СчетУчетаРасчетовПоАвансам` CHAR, `СчетУчетаРасчетовПоТаре` CHAR, `УдалитьСчетУчетаДоходовПоТаре` CHAR, `УдалитьСчетУчетаРасходовПоТаре` CHAR, `УдалитьСтатьяДоходовИРасходовПоТаре` CHAR, `СчетНаОплатуПокупателю` CHAR, `Грузоотправитель` CHAR, `Грузополучатель` CHAR, `АдресДоставки` CHAR, `БанковскийСчетОрганизации` CHAR, `СуммаДокумента` FLOAT, `Ответственный` CHAR, `Комментарий` CHAR, `РучнаяКорректировка` BOOLEAN, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `ОтпускПроизвел` CHAR, `ЗаРуководителяПоПриказу` CHAR, `ЗаГлавногоБухгалтераПоПриказу` CHAR, `ЗаЗаказчикаНаОсновании` CHAR, `ДоверенностьНомер` CHAR, `ДоверенностьДата` Date, `ДоверенностьВыдана` CHAR, `ДоверенностьЧерезКого` CHAR, `ВидЭлектронногоДокумента` CHAR, `ДокументБезНДС` BOOLEAN, `ts_Товары` JSON, `ts_ВозвратнаяТара` JSON, `ts_Услуги` JSON, `ts_АгентскиеУслуги` JSON, `ts_ЗачетАвансов` JSON);
CREATE TABLE IF NOT EXISTS `ireg_ЦеныНоменклатуры` (`ТипЦен` CHAR, `Номенклатура` CHAR, `Валюта` CHAR, `Цена` FLOAT, PRIMARY KEY (`ТипЦен`, `Номенклатура`));
CREATE TABLE IF NOT EXISTS `cat_ОбщероссийскийКлассификаторПродукции` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторТНВЭД` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Услуга` BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_ФизическиеЛица` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаРождения` Date, `Пол` CHAR, `ИНН` CHAR, `СтраховойНомерПФР` CHAR, `МестоРождения` CHAR, `ГруппаДоступа` CHAR, `УдалитьПол` CHAR, `ФИО` CHAR, `УточнениеНаименования` CHAR, `ДатаРегистрации` Date, `НаименованиеСлужебное` CHAR, `ОсновнойБанковскийСчет` CHAR, `ПостоянноПроживалВКрыму18Марта2014Года` BOOLEAN, `parent` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_Файлы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Автор` CHAR, `ВладелецФайла` CHAR, `ДатаЗаема` Date, `ДатаСоздания` Date, `Зашифрован` BOOLEAN, `ИндексКартинки` INT, `Описание` CHAR, `ПодписанЭП` BOOLEAN, `ПолноеНаименование` CHAR, `Редактирует` CHAR, `ТекстХранилище` CHAR, `ТекущаяВерсия` CHAR, `ТекущаяВерсияАвтор` CHAR, `ТекущаяВерсияДатаМодификацииФайла` Date, `ТекущаяВерсияДатаСоздания` Date, `ТекущаяВерсияКод` CHAR, `ТекущаяВерсияНомерВерсии` INT, `ТекущаяВерсияПутьКФайлу` CHAR, `ТекущаяВерсияРазмер` INT, `ТекущаяВерсияРасширение` CHAR, `ТекущаяВерсияТом` CHAR, `ХранитьВерсии` BOOLEAN, `ts_extra_fields` JSON, `ts_СертификатыШифрования` JSON);
CREATE TABLE IF NOT EXISTS `cat_УчетныеЗаписиЭлектроннойПочты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `АдресЭлектроннойПочты` CHAR, `ИмяПользователя` CHAR, `СерверВходящейПочты` CHAR, `СерверИсходящейПочты` CHAR, `ИспользоватьБезопасныйВходНаСерверВходящейПочты` BOOLEAN, `ИспользоватьБезопасныйВходНаСерверИсходящейПочты` BOOLEAN, `ПортСервераВходящейПочты` INT, `ПортСервераИсходящейПочты` INT, `ИспользоватьЗащищенноеСоединениеДляВходящейПочты` BOOLEAN, `ИспользоватьЗащищенноеСоединениеДляИсходящейПочты` BOOLEAN, `Пользователь` CHAR, `ПользовательSMTP` CHAR, `УдалитьПароль` CHAR, `УдалитьПарольSMTP` CHAR, `ВремяОжидания` INT, `ОставлятьКопииСообщенийНаСервере` BOOLEAN, `ПротоколВходящейПочты` CHAR, `ПериодХраненияСообщенийНаСервере` INT, `ИспользоватьДляОтправки` BOOLEAN, `ИспользоватьДляПолучения` BOOLEAN, `УдалитьВПредставлениеВключатьИмяПользователя` BOOLEAN, `ТребуетсяВходНаСерверПередОтправкой` BOOLEAN, `УдалитьОтветственныйЗаОбработкуПисем` CHAR, `СпособPOP3Аутентификации` CHAR, `СпособSMTPАутентификации` CHAR, `SMTPАутентификация` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ТипыЦенНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаЦены` CHAR, `ЦенаВключаетНДС` BOOLEAN, `ПорядокОкругления` CHAR, `ОкруглятьВБольшуюСторону` BOOLEAN, `Комментарий` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Субконто` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СтраныМира` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `КодАльфа2` CHAR, `КодАльфа3` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СтатьиЗатрат` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидДеятельностиДляНалоговогоУчетаЗатрат` CHAR, `ВидРасходовНУ` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СтатьиДвиженияДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидДвиженияДенежныхСредств` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СпецификацииНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Количество` FLOAT, `owner` CHAR, `parent` CHAR, `ts_ИсходныеКомплектующие` JSON);
CREATE TABLE IF NOT EXISTS `cat_Сотрудники` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ФизическоеЛицо` CHAR, `ГоловнаяОрганизация` CHAR, `УдалитьВидЗанятости` CHAR, `УдалитьТекущаяОрганизация` CHAR, `УдалитьТекущееПодразделение` CHAR, `УдалитьТекущаяДолжность` CHAR, `УдалитьТекущаяТарифнаяСтавка` FLOAT, `ТекущийПроцентСевернойНадбавки` FLOAT, `УдалитьДатаПриема` Date, `УдалитьДатаУвольнения` Date, `ВАрхиве` BOOLEAN, `УточнениеНаименования` CHAR, `УдалитьОсновноеРабочееМестоВОрганизации` BOOLEAN, `УдалитьОрганизация` CHAR, `ГоловнойСотрудник` CHAR, `ts_extra_fields` JSON, `ts_НаборыЗначенийДоступа` JSON);
CREATE TABLE IF NOT EXISTS `cat_Склады` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Комментарий` CHAR, `ТипЦенРозничнойТорговли` CHAR, `ТипСклада` CHAR, `ПодразделениеОрганизации` CHAR, `НоменклатурнаяГруппа` CHAR, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_РолиКонтактныхЛиц` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_РегистрацииВНалоговомОргане` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Доверенность` CHAR, `ДокументПредставителя` CHAR, `КодПоОКТМО` CHAR, `КодПоОКАТО` CHAR, `КПП` CHAR, `НаименованиеИФНС` CHAR, `НаименованиеОбособленногоПодразделения` CHAR, `Представитель` CHAR, `УдалитьДоверенность` CHAR, `УполномоченноеЛицоПредставителя` CHAR, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_РасходыБудущихПериодов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидРБП` CHAR, `СпособПризнанияРасходов` CHAR, `ДатаНачалаСписания` Date, `ДатаОкончанияСписания` Date, `СчетЗатрат` CHAR, `СубконтоЗатрат1` CHAR, `СубконтоЗатрат2` CHAR, `СубконтоЗатрат3` CHAR, `Сумма` FLOAT, `ВидАктива` CHAR, `Комментарий` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ПрочиеДоходыИРасходы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидПрочихДоходовИРасходов` CHAR, `ВидДеятельностиДляНалоговогоУчетаЗатрат` CHAR, `ПринятиеКналоговомуУчету` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ПроизводственныеКалендари` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_Пользователи` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Недействителен` BOOLEAN, `Подразделение` CHAR, `ФизическоеЛицо` CHAR, `Комментарий` CHAR, `ancillary` BOOLEAN, `Подготовлен` BOOLEAN, `ИдентификаторПользователяИБ` CHAR, `ИдентификаторПользователяСервиса` CHAR, `СвойстваПользователяИБ` CHAR, `ts_extra_fields` JSON, `ts_КонтактнаяИнформация` JSON);
CREATE TABLE IF NOT EXISTS `cat_ПодразделенияОрганизаций` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `РеквизитДопУпорядочивания` INT, `РайонныйКоэффициент` FLOAT, `РайонныйКоэффициентРФ` FLOAT, `УдалитьКодПоОКАТО` CHAR, `КПП` CHAR, `НаименованиеПолное` CHAR, `ОбособленноеПодразделение` BOOLEAN, `prefix` CHAR, `ПрефиксБП20` CHAR, `ГоловнаяОрганизация` CHAR, `ЦифровойИндексОбособленногоПодразделения` INT, `РегистрацияВНалоговомОргане` CHAR, `СоответствуетСудамЗарегистрированнымВРоссийскомМеждународномРеестреСудов` BOOLEAN, `РеквизитДопУпорядочиванияИерархического` CHAR, `owner` CHAR, `parent` CHAR, `ts_extra_fields` JSON, `ts_КонтактнаяИнформация` JSON);
CREATE TABLE IF NOT EXISTS `cat_Организации` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидОбменаСКонтролирующимиОрганами` CHAR, `ГоловнаяОрганизация` CHAR, `ИНН` CHAR, `ДополнительныйКодФСС` CHAR, `ЕстьОбособленныеПодразделения` BOOLEAN, `ИндивидуальныйПредприниматель` CHAR, `КодНалоговогоОргана` CHAR, `КодНалоговогоОрганаПолучателя` CHAR, `ДатаРегистрации` Date, `КодОрганаПФР` CHAR, `СвидетельствоНаименованиеОргана` CHAR, `СвидетельствоКодОргана` CHAR, `ОсновнойБанковскийСчет` CHAR, `КодОрганаФСГС` CHAR, `УдалитьКодПоОКАТО` CHAR, `КодПоОКПО` CHAR, `КодПодчиненностиФСС` CHAR, `НаименованиеНалоговогоОргана` CHAR, `КПП` CHAR, `ИПРегистрационныйНомерПФР` CHAR, `КрупнейшийНалогоплательщик` BOOLEAN, `НаименованиеПолное` CHAR, `НаименованиеСокращенное` CHAR, `РегистрационныйНомерТФОМС` CHAR, `ИПРегистрационныйНомерТФОМС` CHAR, `НаименованиеТерриториальногоОрганаПФР` CHAR, `НаименованиеТерриториальногоОрганаФСС` CHAR, `ИПРегистрационныйНомерФСС` CHAR, `УдалитьИПКодПодчиненностиФСС` CHAR, `ОбменКаталогОтправкиДанныхОтчетности` CHAR, `ОбменКаталогПрограммыЭлектроннойПочты` CHAR, `КодОКОНХ` CHAR, `ОбменКодАбонента` CHAR, `ОбособленноеПодразделение` BOOLEAN, `ОГРН` CHAR, `ПрименятьРайонныйКоэффициент` BOOLEAN, `ПрименятьСевернуюНадбавку` BOOLEAN, `РайонныйКоэффициент` FLOAT, `prefix` CHAR, `ИностраннаяОрганизация` BOOLEAN, `НаименованиеИнострОрганизации` CHAR, `СтранаРегистрации` CHAR, `КодВСтранеРегистрации` CHAR, `СтранаПостоянногоМестонахождения` CHAR, `РегистрационныйНомерФСС` CHAR, `РегистрацияВНалоговомОргане` CHAR, `ПрефиксБП20` CHAR, `УдалитьТерриториальныеУсловияПФР` CHAR, `РегистрационныйНомерПФР` CHAR, `ВариантНаименованияДляПечатныхФорм` CHAR, `НаименованиеПлательщикаПриПеречисленииВБюджет` CHAR, `СвидетельствоДатаВыдачи` Date, `СвидетельствоСерияНомер` CHAR, `УчетнаяЗаписьОбмена` CHAR, `КодОКВЭД` CHAR, `ЦифровойИндексОбособленногоПодразделения` INT, `НаименованиеОКВЭД` CHAR, `КодОКОПФ` CHAR, `НаименованиеОКОПФ` CHAR, `ТерриториальныеУсловияПФР` CHAR, `КодОКФС` CHAR, `РайонныйКоэффициентРФ` FLOAT, `ВидСтавокЕСНиПФР` CHAR, `УдалитьЮрФизЛицо` CHAR, `УдалитьКодИФНС` CHAR, `НаименованиеОКФС` CHAR, `УдалитьРайонныйКоэффициентРФ` FLOAT, `ФайлЛоготип` CHAR, `ФайлФаксимильнаяПечать` CHAR, `ИПИспользуетТрудНаемныхРаботников` BOOLEAN, `ЮридическоеФизическоеЛицо` CHAR, `ДополнительныеУсловияПоУмолчанию` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ОбщероссийскийКлассификаторОсновныхФондов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КонтрольноеЧисло` CHAR, `НаименованиеГруппировки` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_НомераГТД` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Комментарий` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_НоменклатурныеГруппы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `СпособУчетаНДС` CHAR, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_Номенклатура` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `Артикул` CHAR, `ЕдиницаИзмерения` CHAR, `СтавкаНДС` CHAR, `Комментарий` CHAR, `Услуга` BOOLEAN, `НоменклатурнаяГруппа` CHAR, `СтранаПроисхождения` CHAR, `НомерГТД` CHAR, `СтатьяЗатрат` CHAR, `ОсновнаяСпецификацияНоменклатуры` CHAR, `Производитель` CHAR, `Импортер` CHAR, `КодТНВЭД` CHAR, `КодОКВЭД` CHAR, `КодОКП` CHAR, `ВидНоменклатуры` CHAR, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_НаборыДополнительныхРеквизитовИСведений` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КоличествоРеквизитов` CHAR, `КоличествоСведений` CHAR, `Используется` BOOLEAN, `parent` CHAR, `ts_extra_fields` JSON, `ts_extra_properties` JSON);
CREATE TABLE IF NOT EXISTS `cat_Контрагенты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `ОбособленноеПодразделение` BOOLEAN, `ЮридическоеФизическоеЛицо` CHAR, `СтранаРегистрации` CHAR, `ГоловнойКонтрагент` CHAR, `ИНН` CHAR, `КПП` CHAR, `КодПоОКПО` CHAR, `ДокументУдостоверяющийЛичность` CHAR, `ОсновнойБанковскийСчет` CHAR, `ОсновнойДоговорКонтрагента` CHAR, `ОсновноеКонтактноеЛицо` CHAR, `Комментарий` CHAR, `ДополнительнаяИнформация` CHAR, `УдалитьЮрФизЛицо` CHAR, `ИННВведенКорректно` BOOLEAN, `КППВведенКорректно` BOOLEAN, `РасширенноеПредставлениеИНН` CHAR, `РасширенноеПредставлениеКПП` CHAR, `НалоговыйНомер` CHAR, `РегистрационныйНомер` CHAR, `ГосударственныйОрган` BOOLEAN, `ВидГосударственногоОргана` CHAR, `КодГосударственногоОргана` CHAR, `СвидетельствоСерияНомер` CHAR, `СвидетельствоДатаВыдачи` Date, `parent` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON, `ts_ИсторияКПП` JSON);
CREATE TABLE IF NOT EXISTS `cat_КонтактныеЛица` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Фамилия` CHAR, `Имя` CHAR, `Отчество` CHAR, `ДатаРождения` Date, `Роль` CHAR, `Должность` CHAR, `Описание` CHAR, `ОбъектВладелец` CHAR, `ВидКонтактногоЛица` CHAR, `ПользовательЛичногоКонтакта` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторЕдиницИзмерения` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторБанковРФ` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КоррСчет` CHAR, `Город` CHAR, `Адрес` CHAR, `Телефоны` CHAR, `ДеятельностьПрекращена` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_property_values` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Вес` FLOAT, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НормаАмортизационныхОтчислений` FLOAT, `ПроцентОтСтоимостиМашины` FLOAT, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ДоговорыКонтрагентов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаВзаиморасчетов` CHAR, `Комментарий` CHAR, `Организация` CHAR, `ПроцентКомиссионногоВознаграждения` FLOAT, `СпособРасчетаКомиссионногоВознаграждения` CHAR, `ТипЦен` CHAR, `ВидДоговора` CHAR, `УчетАгентскогоНДС` BOOLEAN, `ВидАгентскогоДоговора` CHAR, `РасчетыВУсловныхЕдиницах` BOOLEAN, `УдалитьРеализацияНаЭкспорт` BOOLEAN, `ВидВзаиморасчетов` CHAR, `date` Date, `number_doc` CHAR, `СрокДействия` Date, `УстановленСрокОплаты` BOOLEAN, `СрокОплаты` INT, `НаименованиеДляСчетаФактурыНаАванс` CHAR, `ПорядокРегистрацииСчетовФактурНаАвансПоДоговору` CHAR, `Валютный` BOOLEAN, `ОплатаВВалюте` BOOLEAN, `ИспользуетсяПриОбменеДанными` BOOLEAN, `ПредъявляетНДС` BOOLEAN, `НДСПоСтавкам4и2` BOOLEAN, `Руководитель` CHAR, `ЗаРуководителяПоПриказу` CHAR, `ДолжностьРуководителя` CHAR, `РуководительКонтрагента` CHAR, `ЗаРуководителяКонтрагентаПоПриказу` CHAR, `ДолжностьРуководителяКонтрагента` CHAR, `ФайлДоговора` CHAR, `ДоговорПодписан` BOOLEAN, `owner` CHAR, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыТарифовСтраховыхВзносов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `УдалитьИдентификаторОбъекта` CHAR, `КодПФР2011` CHAR, `КодФСС2011` CHAR, `КодПФР2012` CHAR, `КодФСС2012` CHAR, `ПрименяетсяПоОтдельнымДоходам` BOOLEAN, `РеквизитДопУпорядочивания` INT);
CREATE TABLE IF NOT EXISTS `cat_ВидыОплатОрганизаций` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Организация` CHAR, `ТипОплаты` CHAR, `Контрагент` CHAR, `ДоговорКонтрагента` CHAR, `ПроцентБанковскойКомиссии` FLOAT, `СчетУчетаРасчетов` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыОбщественноПолезнойДеятельностиСЗВК` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_ВидыНалоговыхОрганов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_ВидыКонтактнойИнформации` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `type` CHAR, `РеквизитДопУпорядочивания` INT, `ЗапретитьРедактированиеПользователем` BOOLEAN, `Используется` BOOLEAN, `РедактированиеТолькоВДиалоге` BOOLEAN, `МожноИзменятьСпособРедактирования` BOOLEAN, `АдресТолькоРоссийский` BOOLEAN, `ВключатьСтрануВПредставление` BOOLEAN, `ПроверятьПоФИАС` BOOLEAN, `ОбязательноеЗаполнение` BOOLEAN, `ПроверятьКорректность` BOOLEAN, `СкрыватьНеактуальныеАдреса` BOOLEAN, `Подсказка` CHAR, `ТелефонCДобавочнымНомером` BOOLEAN, `РазрешитьВводНесколькихЗначений` BOOLEAN, `УказыватьОКТМО` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыДоходовНДФЛ` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `СтавкаНалогообложенияРезидента` CHAR, `НеОблагаетсяУНалоговогоАгента` BOOLEAN, `КодПрименяемыйВНалоговойОтчетностиС2010Года` CHAR, `ВычетРассчитываетсяАвтоматически` BOOLEAN, `ВычетПоУмолчанию` CHAR, `ИмеетЕдинственныйВычет` BOOLEAN, `СоответствуетОплатеТруда` BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_ВидыДокументовФизическихЛиц` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КодМВД` CHAR, `КодПФР` CHAR, `РеквизитДопУпорядочивания` INT);
CREATE TABLE IF NOT EXISTS `cat_ВидыДеятельностиПредпринимателей` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ХарактерДеятельности` CHAR, `НаименованиеПолное` CHAR, `Лицензия` CHAR, `МестоОсуществления` CHAR, `КодОКВЭД` CHAR, `НоменклатурнаяГруппа` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыВычетовНДФЛ` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КодПрименяемыйВНалоговойОтчетностиС2011Года` CHAR, `КодПрименяемыйВНалоговойОтчетностиС2010Года` CHAR, `ВычетКДоходу` BOOLEAN, `ГруппаВычета` CHAR, `НеПредоставляетсяНерезидентам` BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_ВидыВзаиморасчетов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_Валюты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ЗагружаетсяИзИнтернета` BOOLEAN, `НаименованиеПолное` CHAR, `Наценка` FLOAT, `ОсновнаяВалюта` CHAR, `ПараметрыПрописиНаРусском` CHAR, `ФормулаРасчетаКурса` CHAR, `СпособУстановкиКурса` CHAR);
CREATE TABLE IF NOT EXISTS `cat_БанковскиеСчета` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НомерСчета` CHAR, `Банк` CHAR, `Валютный` BOOLEAN, `ВалютаДенежныхСредств` CHAR, `НомерИДатаРазрешения` CHAR, `ДатаОткрытия` Date, `ДатаЗакрытия` Date, `ПодразделениеОрганизации` CHAR, `БанкДляРасчетов` CHAR, `ВидСчета` CHAR, `ТекстКорреспондента` CHAR, `ТекстНазначения` CHAR, `МесяцПрописью` BOOLEAN, `СуммаБезКопеек` BOOLEAN, `ВсегдаУказыватьКПП` BOOLEAN, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Банки` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КоррСчет` CHAR, `Город` CHAR, `Адрес` CHAR, `Телефоны` CHAR, `РучноеИзменение` INT, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторУслугНаселению` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторПродукцииПоВидамДеятельности` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `ЕдиницаСтатистическогоУчета` CHAR, `ВидСвободныхСтрокФормСтатистики` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторВидовЭкономическойДеятельности` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_НоменклатураПоставщиков` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Номенклатура` CHAR, `Артикул` CHAR, `identifier` CHAR, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыРегистровУчета` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Отчет` CHAR, `ВариантОтчета` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_РабочиеМеста` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ИмяКомпьютера` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Патенты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаНачала` Date, `ДатаОкончания` Date, `ПотенциальноВозможныйГодовойДоход` FLOAT, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыОтправляемыхДокументов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR, `Источник` CHAR, `ТипПолучателя` CHAR, `ТипДокумента` CHAR, `ПомеченВГлавномУзле` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СтатьиФинансированияЗарплата` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_СтатьиРасходовЗарплата` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `parent` CHAR);
